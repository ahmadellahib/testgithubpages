<?xml version="1.0" encoding="UTF-8"?>
<!--Created:ce44715c-8c4e-446b-879c-ea9ebe0f09c8-->
<OfficeApp
          xmlns="http://schemas.microsoft.com/office/appforoffice/1.1"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:bt="http://schemas.microsoft.com/office/officeappbasictypes/1.0"
          xmlns:mailappor="http://schemas.microsoft.com/office/mailappversionoverrides/1.0"
          xsi:type="MailApp">

  <!-- Begin Basic Settings: Add-in metadata, used for all versions of Office unless override provided. -->

  <!-- IMPORTANT! Id must be unique for your add-in, if you reuse this manifest ensure that you change this id to a new GUID. -->
  <Id>c7150ea9-f91a-478e-bfd0-413710e662b7</Id>

  <!--Version. Updates from the store only get triggered if there is a version change. -->
  <Version>1.0.0.0</Version>
  <ProviderName>[Provider name]</ProviderName>
  <DefaultLocale>en-US</DefaultLocale>
  <!-- The display name of your add-in. Used on the store and various places of the Office UI such as the add-ins dialog. -->
  <DisplayName DefaultValue="OutlookWebAddIn1" />
  <Description DefaultValue="OutlookWebAddIn1"/>
  <IconUrl DefaultValue="~remoteAppUrl/Images/icon64.png"/>

  <SupportUrl DefaultValue="http://www.contoso.com" />
  <!-- Domains that will be allowed when navigating. For example, if you use ShowTaskpane and then have an href link, navigation will only be allowed if the domain is on this list. -->
  <AppDomains>
    <AppDomain>AppDomain1</AppDomain>
    <AppDomain>AppDomain2</AppDomain>
    <AppDomain>AppDomain3</AppDomain>
  </AppDomains>
  <!--End Basic Settings. -->

  <Hosts>
    <Host Name="Mailbox" />
  </Hosts>
  <Requirements>
    <Sets>
      <Set Name="Mailbox" MinVersion="1.1" />
    </Sets>
  </Requirements>
  <FormSettings>
    <Form xsi:type="ItemRead">
      <DesktopSettings>
        <SourceLocation DefaultValue="~remoteAppUrl/MessageRead.html"/>
        <RequestedHeight>250</RequestedHeight>
      </DesktopSettings>
    </Form>
  </FormSettings>

  <Permissions>ReadWriteItem</Permissions>
  <Rule xsi:type="RuleCollection" Mode="Or">
    <Rule xsi:type="ItemIs" ItemType="Message" FormType="Read" />
  </Rule>
  <DisableEntityHighlighting>false</DisableEntityHighlighting>

  <!--  Ahmad
        MailApp supports versions 1.0 and 1.1 of VersionOverrides, so the value of xmlns varies depending on this <VersionOverrides> element's xsi:type value:
        When xsi:type is VersionOverridesV1_0, xmlns must be http://schemas.microsoft.com/office/mailappversionoverrides.
        When xsi:type is VersionOverridesV1_1, xmlns must be http://schemas.microsoft.com/office/mailappversionoverrides/1.1.
        
        To use the features of VersionOverridesV1_1 you need to include it into the parent element, which is VersionOverridesV1_0. 
        This required for clients which do not support v1.1 yet, or will never support.
        
        for details: https://docs.microsoft.com/en-us/office/dev/add-ins/reference/manifest/versionoverrides
  -->
  <VersionOverrides xmlns="http://schemas.microsoft.com/office/mailappversionoverrides" xsi:type="VersionOverridesV1_0">
    <Requirements>
      <bt:Sets DefaultMinVersion="1.3">
        <bt:Set Name="Mailbox" />
      </bt:Sets>
    </Requirements>
    <Hosts>
      <Host xsi:type="MailHost">

        <!-- Ahmad in order to make addin available oultook in Windows, Mac & Owa we need to use DesktopFormFactor element -->
        <DesktopFormFactor>
          <!-- Location of the Functions that UI-less buttons can trigger (ExecuteFunction Actions). -->
          <FunctionFile resid="functionFile" />

          <!-- Ahmad ExtensionPoint element defines where an add-in exposes functionality in the Office UI. 
               The ExtensionPoint element is a child element of AllFormFactors, DesktopFormFactor or MobileFormFactor.
               Extension points for Outlook
                       - MessageReadCommandSurface
                       - MessageComposeCommandSurface
                       - AppointmentOrganizerCommandSurface
                       - AppointmentAttendeeCommandSurface
                       - Module (Can only be used in the DesktopFormFactor.)
                       - MobileMessageReadCommandSurface
                       - MobileOnlineMeetingCommandSurface
                       - LaunchEvent
                       - Events
                       - DetectedEntity (adds a contextual add-in activation on a specified entity type. 
                                        The containing VersionOverrides element must have an xsi:type attribute value of VersionOverridesV1_1.)
                  -->

          <!-- Message Read -->
          <ExtensionPoint xsi:type="MessageReadCommandSurface">
            <!-- Use the default tab of the ExtensionPoint or create your own with <CustomTab id="myTab"> -->
            <OfficeTab id="TabDefault">
              <!-- Up to 6 Groups added per Tab -->
              <Group id="msgReadGroup">
                <Label resid="groupLabel" />

                <!-- Ahmad 
                     
                     For every menuitem you need to define Control element.
                     Valid Control element types are: Button, Menu, or MobileButton.
                     Every Control element must have Action element.
                     
                     for details:
                     https://docs.microsoft.com/en-us/office/dev/add-ins/reference/manifest/control
                     
                     Button type Control performs a single action, either execute a function or show a task pane. 
                     Each button control must have an id unique to the manifest.                   
                
                -->

                <!-- ExecuteFunction button example get Subject -->
                <Control xsi:type="Button" id="msgReadFunctionButton">
                  <Label resid="funcReadButtonLabel" />
                  <Supertip>
                    <Title resid="funcReadSuperTipTitle" />
                    <Description resid="funcReadSuperTipDescription" />
                  </Supertip>
                  <Icon>
                    <bt:Image size="16" resid="icon16" />
                    <bt:Image size="32" resid="icon32" />
                    <bt:Image size="80" resid="icon80" />
                  </Icon>
                  <Action xsi:type="ExecuteFunction">
                    <FunctionName>getSubject</FunctionName>
                  </Action>
                </Control>

                <!-- ShowTaskpane button example -->
                <Control xsi:type="Button" id="msgReadOpenPaneButton">
                  <Label resid="paneReadButtonLabel" />
                  <Supertip>
                    <Title resid="paneReadSuperTipTitle" />
                    <Description resid="paneReadSuperTipDescription" />
                  </Supertip>
                  <Icon>
                    <bt:Image size="16" resid="icon16" />
                    <bt:Image size="32" resid="icon32" />
                    <bt:Image size="80" resid="icon80" />
                  </Icon>
                  <Action xsi:type="ShowTaskpane">
                    <SourceLocation resid="messageReadTaskPaneUrl" />
                  </Action>
                </Control>
                <!-- Go to http://aka.ms/ButtonCommands to learn how to add more Controls: ExecuteFunction and Menu -->
              </Group>
            </OfficeTab>
          </ExtensionPoint>

          <!-- Message Compose -->
          <ExtensionPoint xsi:type="MessageComposeCommandSurface">
            <OfficeTab id="TabDefault">
                <Group id="compoaseEmailPartsGroup">
                <Label resid="groupLabel" />
                  
                <!-- ExecuteFunction button set subject example -->
                <Control xsi:type="Button" id="setSubjectFunctionButton">
                  <Label resid="funcSetSubjectButtonLabel" />
                  <Supertip>
                    <Title resid="funcSetSubjectSuperTipTitle" />
                    <Description resid="funcSetSubjSuperTipDescription" />
                  </Supertip>
                  <Icon>
                    <bt:Image size="16" resid="icon16" />
                    <bt:Image size="32" resid="icon32" />
                    <bt:Image size="80" resid="icon80" />
                  </Icon>
                  <Action xsi:type="ExecuteFunction">
                    <FunctionName>setSubject</FunctionName>
                  </Action>
                </Control>

                  <!-- ExecuteFunction button add signature example -->
                  <Control xsi:type="Button" id="setSignatureFunctionButton">
                    <Label resid="funcSetSignatureButtonLabel" />
                    <Supertip>
                      <Title resid="funcSetSignatureSuperTipTitle" />
                      <Description resid="funcSetSigSuperTipDescription" />
                    </Supertip>
                    <Icon>
                      <bt:Image size="16" resid="icon16" />
                      <bt:Image size="32" resid="icon32" />
                      <bt:Image size="80" resid="icon80" />
                    </Icon>
                    <Action xsi:type="ExecuteFunction">
                      <FunctionName>setSignature</FunctionName>
                    </Action>
                  </Control>

                <!-- Go to http://aka.ms/ButtonCommands to learn how to add more Controls: ExecuteFunction and Menu -->
              </Group>
            </OfficeTab>
          </ExtensionPoint>

          <!-- Go to http://aka.ms/ExtensionPointsCommands to learn how to add more Extension Points: MessageRead, AppointmentOrganizer, AppointmentAttendee -->
        </DesktopFormFactor>
      </Host>
    </Hosts>

    <Resources>
      <bt:Images>
        <bt:Image id="icon16" DefaultValue="~remoteAppUrl/Images/icon16.png"/>
        <bt:Image id="icon32" DefaultValue="~remoteAppUrl/Images/icon32.png"/>
        <bt:Image id="icon80" DefaultValue="~remoteAppUrl/Images/icon80.png"/>
      </bt:Images>
      <bt:Urls>
        <bt:Url id="functionFile" DefaultValue="~remoteAppUrl/Functions/FunctionFile.html"/>
        <bt:Url id="messageReadTaskPaneUrl" DefaultValue="~remoteAppUrl/MessageRead.html"/>
        <bt:Url id="residDetectedEntityURL" DefaultValue="~remoteAppUrl/MessageRead.html"/>
      </bt:Urls>
      <bt:ShortStrings>
        <bt:String id="groupLabel" DefaultValue="My Add-in Group"/>
        <bt:String id="customTabLabel"  DefaultValue="My Add-in Tab"/>
       
        <bt:String id="paneReadButtonLabel" DefaultValue="Display all properties"/>
        <bt:String id="paneReadSuperTipTitle" DefaultValue="Get all properties"/>
        
        <bt:String id="funcReadButtonLabel" DefaultValue="Read Subject" />
        <bt:String id="funcReadSuperTipTitle" DefaultValue="Get the subject of the email"/>
      
        <bt:String id="funcSetSubjectButtonLabel" DefaultValue="Set Subject" />
        <bt:String id="funcSetSubjectSuperTipTitle" DefaultValue="Set the subject of the email"/>

        <bt:String id="funcSetSignatureButtonLabel" DefaultValue="Set Signature" />
        <bt:String id="funcSetSignatureSuperTipTitle" DefaultValue="Set the signature of the email"/>

      </bt:ShortStrings>
      <bt:LongStrings>
        <bt:String id="paneReadSuperTipDescription" DefaultValue="Opens a pane displaying all available properties. This is an example of a button that opens a task pane."/>
        <bt:String id="funcReadSuperTipDescription" DefaultValue="Gets the subject from the email and display it in the console log"/>
        <bt:String id="funcSetSubjSuperTipDescription" DefaultValue="test setting subject of email"/>
        <bt:String id="funcSetSigSuperTipDescription" DefaultValue="test setting signature of email"/>
      </bt:LongStrings>
    </Resources>
  </VersionOverrides>
</OfficeApp>
